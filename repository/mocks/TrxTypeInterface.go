// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	entity "wmb-rest-api/model/entity"

	mock "github.com/stretchr/testify/mock"
)

// TrxTypeInterface is an autogenerated mock type for the TrxTypeInterface type
type TrxTypeInterface struct {
	mock.Mock
}

// Create provides a mock function with given fields: tt
func (_m *TrxTypeInterface) Create(tt *entity.TransactionType) error {
	ret := _m.Called(tt)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.TransactionType) error); ok {
		r0 = rf(tt)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// FindAll provides a mock function with given fields: by
func (_m *TrxTypeInterface) FindAll(by map[string]interface{}) ([]entity.TransactionType, error) {
	ret := _m.Called(by)

	var r0 []entity.TransactionType
	if rf, ok := ret.Get(0).(func(map[string]interface{}) []entity.TransactionType); ok {
		r0 = rf(by)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]entity.TransactionType)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(map[string]interface{}) error); ok {
		r1 = rf(by)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// FindById provides a mock function with given fields: tt
func (_m *TrxTypeInterface) FindById(tt *entity.TransactionType) error {
	ret := _m.Called(tt)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.TransactionType) error); ok {
		r0 = rf(tt)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Update provides a mock function with given fields: tt, with
func (_m *TrxTypeInterface) Update(tt *entity.TransactionType, with map[string]interface{}) error {
	ret := _m.Called(tt, with)

	var r0 error
	if rf, ok := ret.Get(0).(func(*entity.TransactionType, map[string]interface{}) error); ok {
		r0 = rf(tt, with)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewTrxTypeInterface interface {
	mock.TestingT
	Cleanup(func())
}

// NewTrxTypeInterface creates a new instance of TrxTypeInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTrxTypeInterface(t mockConstructorTestingTNewTrxTypeInterface) *TrxTypeInterface {
	mock := &TrxTypeInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
